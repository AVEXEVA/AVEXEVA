<?PHP
NAMESPACE HTTP\GET\INDEX;
CLASS GET EXTENDS \INDEX {
  	//VARIABLES
  	///PRIVATE
  	PROTECTED $DATABASE = NULL;
  	PROTECTED $USER     = NULL;
  	PROTECTED $TOKEN    = NULL;
  	///PROTECTED
  	PROTECTED $DATA_IN  = ARRAY( );
  	PROTECTED $DATA_OUT  = NULL;
  	//FUNCTIONS
  	///CONSTRUCTS
 	PUBLIC FUNCTION __CONSTRUCT( $_ARGS = ARRAY( ) ){
		PARENT::__CONSTRUCT( SELF::__CONSTRUCTOR( $_ARGS ) );
		SELF::__CONSTRUCTION( );
	}
	PUBLIC FUNCTION __CONSTRUCTOR( $_ARGS = ARRAY( ) ){
		IF( IS_ARRAY( $_ARGS) && COUNT( $_ARGS ) > 0 ){
			FOREACH( $_ARGS AS $KEY=>$VALUE ){
				$FUNCTION = '__' . $KEY;
				IF( IN_ARRAY( $KEY, ARRAY(
					'DATABASE',
					'USER',
					'TOKEN',
					'DATA'
				)){
					SELF::$FUNCTION( $VALUE );
					UNSET( $_ARGS[ 'KEY' ];
				}
			}
			RETURN $_ARGS;
		} ELSE { RETURN SELF::__CONSTRUCTOR( ); }
	}
	PUBLIC FUNCTION __CONSTRUCTION( ){
		PARENT::__SET( 'DATA_OUT', PARENT::__GET( 'DATABASE' )->__DATA_IN( PARENT::__GET( 'DATA_IN' ) ) );
	}
	PUBLIC FUNCTION __OUTPUT( ){

	}
  ///INITOBJECT
  PRIVATE FUNCTION DATABASE( $_ARGS = ARRAY( ) ){ $THIS->DATABASE = NEW \SQL\DATABASE( $_ARGS ); }
  PRIVATE FUNCTION USER( $_ARGS = ARRAY( ) ){     $THIS->USER     = NEW \APP\USER( $_ARGS ); }
  PRIVATE FUNCTION TOKEN( $_ARGS = ARRAY( ) ){    $THIS->TOKEN    = NEW \HTTP\SESSION\TOKEN( $_ARGS ); }
  PRIVATE FUNCTION DATA( $_ARGS = ARRAY( ) ){ 	  $THIS->DATA     = NEW \INDEX( $_ARGS ); }
}?>
